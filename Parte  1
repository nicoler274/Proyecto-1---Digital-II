//******************************************/
// Universidad del Valle de Guatemala
// BE3029 - Electronica Digital 2
// Nicole Rodriguez
// 12/08/2025
// Proyecto 1 - Sensor de temperatura
// MCU: ESP32 dev kit 1.0
//******************************************/

//******************************************/
// Librerias
//******************************************/
#include <Arduino.h>
#include <stdint.h>
#include <driver/ledc.h>

//******************************************/
// Definiciones
//******************************************/
#define ledR 13 
#define ledY 12
#define ledG 27
#define sensorTemp 25 // Sensor de temperatura
#define but1 5

// Anti-rebote
volatile bool flagLectura = false;
volatile unsigned long ultimaInterrupcion = 0;
const unsigned long tiempoRebote = 250; // ms

// Variables para ADC
int adcTemp;
float tempC;

//******************************************/
// ISRs Rutinas de Interrupcion
//******************************************/
void IRAM_ATTR ISR_tomaTemp() {
  unsigned long tiempoActual = millis();
  if (tiempoActual - ultimaInterrupcion > tiempoRebote) {
    flagLectura = true;    
    ultimaInterrupcion = tiempoActual;
  }
}

//******************************************/
// Configuracion
//******************************************/
void setup() {
  Serial.begin(115200);
  pinMode(ledR, OUTPUT);
  pinMode(ledY, OUTPUT);
  pinMode(ledG, OUTPUT);
  pinMode(sensorTemp, INPUT);
  pinMode(but1, INPUT_PULLUP);

  attachInterrupt(digitalPinToInterrupt(but1), ISR_tomaTemp, FALLING);
}

//******************************************/
// Loop Principal
//******************************************/
void loop() {
  // Lectura de temperatura
  if (flagLectura) {
    flagLectura = false;

    adcTemp = analogRead(sensorTemp);
    float voltage = adcTemp * (3.3 / 4095.0); 
    tempC = voltage / 0.01;                   

    Serial.print("ADC: ");
    Serial.println(adcTemp);
    Serial.print("Temperatura (Â°C): ");
    Serial.println(tempC, 2);
  }
}
